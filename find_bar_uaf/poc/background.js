let tabUpdatedListener = null;

chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {
    if (tabUpdatedListener) {
        tabUpdatedListener(tabId, changeInfo, tab);
    }
});

startProcess();

function startProcess() {
    chrome.windows.create({url: "javascript:window.print()"}, function (newWindow) {
        // Give the print dialog some time to be shown.
        setTimeout(() => {
            onFirstWindowCreated(newWindow.tabs[0]);
        }, 1000);
    });
}

function onFirstWindowCreated(tab) {
    chrome.windows.create({url: "about:blank", focused: true}, function (newWindow) {
        onSecondWindowCreated(tab);
    });
}

function onSecondWindowCreated(tab) {
    chrome.tabs.update(tab.id, {url: "about:blank"});

    tabUpdatedListener = function (tabId, changeInfo, updatedTab) {
        if (tabId === tab.id && changeInfo.status === "complete") {
            tabUpdatedListener = null;

            onTabNavigated(tab);
        }
    };
}

function onTabNavigated(tab) {
    chrome.windows.update(tab.windowId, {focused: true}, function () {
        onFirstWindowReactivated(tab);
    });
}

function onFirstWindowReactivated(tab) {
    chrome.debugger.attach({tabId: tab.id}, "1.3", function () {
        onDebuggerAttachedToTab(tab);
    });
}

function onDebuggerAttachedToTab(tab) {
    let keyCode = "F".charCodeAt(0);
    chrome.debugger.sendCommand({tabId: tab.id}, "Input.dispatchKeyEvent", {type: "rawKeyDown",
        key: "KeyF", windowsVirtualKeyCode: keyCode, nativeVirtualKeyCode: keyCode, modifiers: 2});

    setTimeout(() => {
        onFindBarOpened(tab);
    }, 1000);
}

function onFindBarOpened(tab) {
    chrome.tabs.discard(tab.id);
}