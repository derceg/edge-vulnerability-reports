let ieTabFound = false;

chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {
    // changeInfo will be empty for any tabs loaded in IE Mode.
    if (Object.keys(changeInfo).length === 0) {
        onTabUpdated(tab);
    }
});

function onTabUpdated(tab) {
    chrome.tabs.executeScript(tab.id, {code: ""}, function () {
        if (!ieTabFound
            && chrome.runtime.lastError
            && chrome.runtime.lastError.message === "This is not supported on tabs in Internet Explorer Mode.") {
                ieTabFound = true;

                onIETabFound(tab);
        }
    });
}

function onIETabFound(ieTab) {
    let javascriptUrl = "javascript:window.addEventListener('beforeunload', function (event) {"
        + "event.preventDefault();"
        + "event.returnValue = '';"
        + "});";

    // Using a javascript: URL here ensures that the beforeunload confirmation dialog will be shown.
    // This is due to the fact that:
    //
    // 1. Loading a javascript: URL in this way will result in a user activation:
    //
    // https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/local_frame.cc;l=2743;drc=99771df45c050b17535b5c2e1a7358b481e2b49a
    //
    // 2. At least one user activation is required for the confirmation dialog to be shown:
    //
    // https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/dom/document.cc;l=3653;drc=ad7cd8529a9365f0bf6739a567fbc45aaa50456e
    chrome.tabs.create({url: javascriptUrl, windowId: ieTab.windowId, active: true},
        function (secondTab) {
            // Wait a bit to give the javascript code time to execute.
            setTimeout(() => {
                onSecondTabCreated(ieTab, secondTab);
            }, 1000);
        });
}

function onSecondTabCreated(ieTab, secondTab) {
    // This will trigger a beforeunload confirmation dialog.
    chrome.tabs.update(secondTab.id, {url: "about:blank"});

    setTimeout(() => {
        chrome.windows.create({tabId: ieTab.id});
    }, 1000);
}